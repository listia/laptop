#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

if [[ ":$PATH:" != *":$HOME/.bin:"* ]]; then
  printf 'export PATH="$HOME/.bin:$PATH"\n' >> ~/.zshrc
  export PATH="$HOME/.bin:$PATH"
fi
### end common-components/check-home-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}
### end common-components/shared-functions

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      brew upgrade "$@"
    fi
  else
    brew install "$@"
  fi
}

cask_install_or_update() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      brew upgrade "$@"
    fi
  else
    brew install "$@"
  fi
}

brew_is_installed() {
  local NAME=$(brew_expand_alias "$1")

  brew list -1 | grep -Fqx "$NAME"
}

brew_is_upgradable() {
  local NAME=$(brew_expand_alias "$1")

  brew outdated --quiet "$NAME" >/dev/null
  [[ $? -ne 0 ]]
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local NAME=$(brew_expand_alias "$1")
  local DOMAIN="homebrew.mxcl.$NAME"
  local PLIST="$DOMAIN.plist"

  mkdir -p ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/$NAME/$PLIST ~/Library/LaunchAgents

  if launchctl list | grep -q $DOMAIN; then
    launchctl unload ~/Library/LaunchAgents/$PLIST >/dev/null
  fi
  launchctl load ~/Library/LaunchAgents/$PLIST >/dev/null
}
### end mac-components/mac-functions

fancy_echo "Generating SSH KEY"
  if [ ! -f ~/.ssh/id_rsa ]; then
    ssh-keygen -t rsa -b 4096
  else
    fancy_echo "A SSH key pair is exsited. Will not generate."
  fi

fancy_echo "Enter your github username/password. Your sshkey will be imported automatically"
  confirm=""
  while [ ! "$confirm" == "Y" ]
  do
    read -p "Username: " username
    echo "You username is: $username."
    read -p "Is this correct? (Y|n)?" confirm
  done

  read -s -p "Password: " password
  echo "Your username password is $username $password"
  
  # Check 2-factor login
  
### end mac-components/github

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.githubusercontent.com/Homebrew/homebrew/go/install)

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
  # brew update
### end mac-components/homebrew

fancy_echo "Installing Cask ..."
  brew tap caskroom/cask
  brew_install_or_upgrade caskroom/cask/brew-cask
  # brew update && brew upgrade brew-cask && brew cleanup && brew cask cleanup
### end mac-components/cask

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew_install_or_upgrade 'watch'

### end mac-components/packages

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  brew_install_or_upgrade 'imagemagick'


### end mac-components/imagemagick

fancy_echo "Installing rvm, to change Ruby versions ..."
  if [ "rvm not found" == "$(which rvm)" ]; then
    curl -L https://get.rvm.io | bash -s stable
    source ~/.rvm/scripts/rvm
  else
    echo "Found an rvm"
  fi

### end mac-components/rvm

fancy_echo "Upgrading and linking OpenSSL ..."
  brew_install_or_upgrade 'openssl'
  brew unlink openssl && brew link openssl --force
### end mac-components/compiler-and-libraries

ruby_version="ruby-1.9.3-p327"

fancy_echo "Installing Ruby $ruby_version ..."
  rvm install "$ruby_version" --disable-binary --patch railsexpress

#fancy_echo "Setting $ruby_version as global default Ruby ..."
#  rvm "$ruby_version@listia"


### end common-components/ruby-environment

fancy_echo "Installing Bundler to install project-specific Ruby gems ..."
  gem install bundler --no-document --pre

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))


### end mac-components/bundler

fancy_echo "Installing anvil..."
  brew cask install anvil
### end mac-components/anvil

fancy_echo "Installing MySQL 5.5.30 ..."
  if [ "$(brew tap | grep versions)" == "" ]; then
    brew tap homebrew/versions
  fi

  brew install mysql55
  brew link --force mysql55
### end mac-components/mysql

fancy_echo "Installing Sphinx..."
  if [ "$(brew tap | grep versions)" == "" ]; then
    brew tap homebrew/dupes
  fi

  brew_install_or_upgrade apple-gcc42
  brew_install_or_upgrade https://gist.githubusercontent.com/ngan/3186262/raw/4515131e51b2af16cbfd8d77ba56c3511d009403/sphinx.rb --mysql

### end mac-components/sphinx

fancy_echo "Starting MySQL ..."
  brew_launchctl_restart mysql

### end mac-components/start-services

fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  if [[ -f ~/.laptop.local ]]; then
    source ~/.laptop.local
  fi
### end common-components/personal-additions

